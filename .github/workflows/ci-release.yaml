name: Release LLM-D Image Build

on:
  push:
    tags:
      - 'v*'  # Runs when a tag like v0.1.0 is pushed
  release:
    types: [published]  # Also runs when a GitHub release is published

permissions:
  contents: read
  packages: write
  security-events: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: llm-d

jobs:
  build-llm-d-for-release:
    strategy:
      fail-fast: false
    runs-on: vllm-runner
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # fetch tags for docker/metadata semver handling (if you use git describe etc.)
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --oci-worker-gc

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract Docker metadata (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable=${{ github.event_name == 'release' && github.event.action == 'published' }}
          # Do we want to add semver as well?
            # type=semver,pattern={{version}}
            # type=semver,pattern={{major}}.{{minor}}
            # type=semver,pattern={{major}}

      - name: Build & Push image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.ubi
          platforms: linux/amd64
          push: true
          provenance: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          github-token: ${{ secrets.GHCR_TOKEN }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ github.repository }}@${{ steps.build-and-push.outputs.digest }}
          format: sarif
          output: trivy-results.sarif
          severity: CRITICAL,HIGH,MEDIUM
          scanners: vuln
          timeout: 30m
          skip-dirs: /root/.cache/uv
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.GHCR_TOKEN }}

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      - name: Display vulnerability summary
        run: |
          echo "=== Vulnerability Scan Summary ==="
          if [ -f trivy-results.sarif ]; then
            echo "Scan completed. Check the Security tab for detailed results."
          else
            echo "No vulnerabilities found or scan failed."
          fi
